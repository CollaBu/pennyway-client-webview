name: Install dependencies

on:
  workflow_call:
    inputs:
      task:
        type: string
        required: true
      name:
        type: string
        required: true

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      # 1. 해당 브런치의 코드를 내려받기
      - name: Checkout
        uses: actions/checkout@v4

      # 2. 노드 버전 명시
      - name: Setup Node 18.18.0
        uses: actions/setup-node@v4
        with:
          node-version: 18.18.0
          cache: yarn

      # 3. yarn 버전 명시
      - name: Set yarn version
        id: set-version
        run: yarn set version 1.22.19

      # 4. yarn 캐시 경로 불러오기
      - name: Get cache dir path
        id: yarn-cache-dir-path
        run: echo "CACHE_DIR=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      # 5. yarn 캐싱
      - name: Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.CACHE_DIR }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-${{ steps.set-version.outputs.YARN_VERSION }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-

      # 6. yarn 캐시 체크
      - name: Install dependencies
        run: |
          CACHE_HIT="${{ steps.yarn-cache.outputs.cache-hit }}"
          NODE_MODULES_EXISTS=$(test -d "node_modules" && echo "true" || echo "false")
          if [[ "$CACHE_HIT" != 'true' || "$NODE_MODULES_EXISTS" == 'false' ]]; then
            yarn install
          fi

      # 7. 해당 task 실행
      - name: Test ${{ inputs.task }} with ${{ inputs.name }}
        run: yarn ${{ inputs.task }}
